name: MLOps Azure Data Preparing and AI Training (SDK 2)

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      create_compute:
        description: 'Create compute'
        type: boolean
        default: true
        required: true
      create_env:
        description: 'Create environment'
        type: boolean
        default: true
        required: true
      create_data_check:
        description: 'Create component for data check'
        type: boolean
        default: true
        required: true
      create_data_split:
        description: 'Create component for data split'
        type: boolean
        default: true
        required: true
      create_train:
          description: 'Create component for model training'
          type: boolean
          default: true
          required: true
      create_job:
        description: 'Create job for model training'
        type: boolean
        default: true
        required: true
        
env:
  WORKDIR: ${{ github.workspace }}
  GIT_SHA: ${{ github.sha }} # Set the SHA to use in the code

  AZ_CLI_PATH: ${{ github.workspace }}/azureml-2.0-cli
  AZ_WORKSPACE: diabetes-prediction-v2
  AZ_COMPUTE: cpu-one

  ENV_VERSION: 1.0.0
  DATA_CHECK_VERSION: 1.0.3
  DATA_SPLIT_VERSION: 1.0.3
  TRAIN_VERSION: 2.0.9
  PIPE_VERSION: 1.0.0
 
jobs:

  az-pipeline-job:
    runs-on: ubuntu-20.04

    env:
      RANDOM_SEED: 40
      TRAIN_TEST_SPLIT_FACTOR: 0.20
      TRAIN_DATASHEET_NAME: patients_healthdata_1_train.csv
      TEST_DATASHEET_NAME: patients_healthdata_1_test.csv
      MODEL_NAME: diabetes-prediction-model

    steps:
      - uses: actions/checkout@v2

      - name: add extension by name
        run: az extension add --name ml

      - name: azure login  
        # run: az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
        run: az login -u bart.dewancker@student.howest.be ${{ secrets.HOWEST_AZURE_CLIENT }}
      
      - name: set default workspace
        run: az configure --defaults group=mlops-bart workspace=${{ env.AZ_WORKSPACE }}
        
      - name: create compute
        if: inputs.create_compute
        run: az ml compute create --file ${{ env.AZ_CLI_PATH }}/config/compute.yml
                                  --set name=${{ env.AZ_COMPUTE }}
    
      - name: create environment
        if: inputs.create_env
        run: az ml environment create --file ${{ env.AZ_CLI_PATH }}/config/diabetes-prediction-env.yml
                                      --version ${{ env.ENV_VERSION }}
                                      --set tags.git-sha=${{ env.GIT_SHA }}

      - name: create component for data check
        if: inputs.create_data_check
        run: az ml component create --file ${{ env.AZ_CLI_PATH }}/components/dataprep/datacheck.yml
                                    --version ${{ env.DATA_CHECK_VERSION }}
                                    --set tags.git-sha=${{ env.GIT_SHA }}
                            
      - name: create component for data split
        if: inputs.create_data_split
        run: az ml component create --file ${{ env.AZ_CLI_PATH }}/components/dataprep/datasplit.yml
                                    --version ${{ env.DATA_SPLIT_VERSION }}
                                    --set tags.git-sha=${{ env.GIT_SHA }}
                                  
      - name: create component for model training
        if: inputs.create_train
        run: az ml component create --file ${{ env.AZ_CLI_PATH }}/components/training/training.yml
                                    --version ${{ env.TRAIN_VERSION }}
                                    --set tags.git-sha=${{ env.GIT_SHA }}

      - name: create job
        if: inputs.create_job
        run: az ml job create --file ${{ env.AZ_CLI_PATH }}/pipelines/prediction-pipeline.yml
                              --set inputs.random_seed=${{ env.RANDOM_SEED }}
                              --set inputs.train_test_split_factor=${{ env.TRAIN_TEST_SPLIT_FACTOR }}
                              --set jobs.data_check.component=azureml:data_check:${{ env.DATA_CHECK_VERSION }}
                              --set jobs.data_split.component=azureml:data_split:${{ env.DATA_SPLIT_VERSION }}
                              --set jobs.training.component=azureml:training:${{ env.TRAIN_VERSION }}

                              

